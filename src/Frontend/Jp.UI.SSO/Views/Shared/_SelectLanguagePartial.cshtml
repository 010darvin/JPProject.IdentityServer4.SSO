@using System.Threading.Tasks
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
}
<li class="nav-item dropdown">
    <a class="nav-link" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
        <i class="fa fa-2x fa-globe"></i>
    </a>
    <div class="dropdown-menu dropdown-menu-right dropdown-menu-lg">
        <div class="dropdown-header text-center">
            <strong>@Localizer["Title-Available-Languages"]</strong>
        </div>
        <a asp-controller="Home" asp-action="SetLanguage" asp-route-culture="pt-BR" class="dropdown-item">
            <i class="flag-icon flag-icon-br"></i> @Localizer["Title-Português"]
        </a>
        <a asp-controller="Home" asp-action="SetLanguage" asp-route-culture="en" class="dropdown-item">
            <i class="flag-icon flag-icon-us"></i> @Localizer["Title-English"]
        </a>
        @foreach (var item in cultureItems)
        {

            <a asp-controller="Home" asp-action="SetLanguage" asp-route-culture="@requestCulture.RequestCulture.UICulture.Name" class="dropdown-item">
                <i class="flag-icon flag-icon-us"></i> @requestCulture.RequestCulture.UICulture.DisplayName
            </a>
        }
    </div>
</li>